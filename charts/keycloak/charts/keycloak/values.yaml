# charts/keycloak/charts/keycloak/values.yaml
#
admin:
  name: admin
  password: admin
cache:
  type: ispn
  file: cache-ispn.xml
conf_dir: /opt/keycloak/conf
database:
  type: postgres
  username: keycloak
  password: ""
  #secret:
  #  name: keycloak-db-password
  #  key_ref: password
  url: jdbc:postgresql://localhost/keycloak
health_enabled: false
hostname:
  admin: ""
  admin_url: ""
  name: ""
  path: /
  port: -1
  strict: true
  strict_backchannel: false
  url: ""
https_certificate:
  file: "${kc.home.dir}conf/server.crt.pem"
  key_file: "${kc.home.dir}conf/server.key.pem"
  secret_name: ""
metrics_enabled: false
proxy: edge
vault:
  # BUILD OPTION Vault type of `file` is required for using Kubernetes secrets
  #type: file
  directory: /.k8s_vault
  realms: []
  #  - name: REALM_NAME
  #    secret: SECRET_NAME

replicaCount: 1

image:
  repository: quay.io/keycloak/keycloak
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /js/
          pathType: Prefix
        - path: /realms/
          pathType: Prefix
        - path: /resources/
          pathType: Prefix
        - path: /robots.txt
          pathType: Exact
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
